{"version":3,"sources":["component/search-box/search-box.component.jsx","component/card/card.component.jsx","component/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","className","type","placeholder","onChange","onSearchChange","Card","src","monster","id","alt","name","email","CardList","monsters","map","App","event","setState","SearchField","target","value","state","fetch","then","res","json","result","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAY,SAAAC,GAAK,OAC1B,uBACIC,UAAU,SACVC,KAAM,SACNC,YAAY,kBACZC,SAAUJ,EAAMK,kBCNXC,G,YAAO,SAAAN,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBAAKM,IAAG,+BAA0BP,EAAMQ,QAAQC,GAAxC,0BAAoEC,IAAI,YAC5E,6BAAKV,EAAMQ,QAAQG,OACnB,4BAAIX,EAAMQ,QAAQI,aCHbC,EAAW,SAAAb,GACpB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMc,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UC+CpBO,E,kDAnCb,aAAe,IAAD,8BACZ,gBAcFX,eAAiB,SAACY,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAY,EAAKT,SAAS,CAAEJ,SAAUa,S,oBAOhD,WACE,MAAkCC,KAAKN,MAA/BR,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YACZU,EAAmBf,EAASgB,QAAO,SAACtB,GACxC,OAAOA,EAAQG,KAAKoB,cAAcC,SAASb,EAAYY,kBAGzD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWI,eAAgBuB,KAAKvB,iBAChC,cAAC,EAAD,CAAUS,SAAUe,W,GA9BVI,aCPHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52710f0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\n\r\nexport const SearchBox = props => (\r\n    <input \r\n        className='search'\r\n        type ='search'\r\n        placeholder='Search monsters'\r\n        onChange={props.onSearchChange}\r\n    />\r\n); ","import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => \r\n                <Card key={monster.id} monster={monster} />\r\n            )}\r\n        </div>\r\n    )\r\n}","// import React from 'react';\n// // import logo from './logo.svg';\n\n// function App() {\n//   return (\n//     <div>\n//       Welcome to the world of React.\n//     </div>\n//   )\n// }\n\n// export default App\n\n/** Class Component */\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { SearchBox } from \"./component/search-box/search-box.component\";\nimport { CardList } from \"./component/card-list/card-list.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      SearchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((result) => this.setState({ monsters: result }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ SearchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, SearchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(SearchField.toLowerCase());\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}